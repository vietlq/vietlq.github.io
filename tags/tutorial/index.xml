<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Viet&#39;s Blog</title>
    <link>https://vietlq.github.io/tags/tutorial/</link>
    <description>Recent content in Tutorial on Viet&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Jun 2017 11:41:20 +0100</lastBuildDate>
    
	<atom:link href="https://vietlq.github.io/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Install a Git Repo &amp; Serve via SSH</title>
      <link>https://vietlq.github.io/2017/06/04/how-to-install-a-git-repo--serve-via-ssh/</link>
      <pubDate>Sun, 04 Jun 2017 11:41:20 +0100</pubDate>
      
      <guid>https://vietlq.github.io/2017/06/04/how-to-install-a-git-repo--serve-via-ssh/</guid>
      <description>Love Git but don’t want to pay GitHub to have a private repo? No problem. Here’s the solution. I was looking for a way to create a repo and serve it on my server via ssh. Git made it really simple and we can do in 3 steps (copied from the Reference 1):
Steps 1. Create a repo # On the server side mkdir ~/repos/ cd ~/repos/ GIT_DIR=project.git git init cd project.</description>
    </item>
    
    <item>
      <title>Listing all header files your cpp depends on</title>
      <link>https://vietlq.github.io/2017/06/03/listing-all-header-files-your-cpp-depends-on/</link>
      <pubDate>Sat, 03 Jun 2017 18:04:22 +0100</pubDate>
      
      <guid>https://vietlq.github.io/2017/06/03/listing-all-header-files-your-cpp-depends-on/</guid>
      <description>I needed to extract certain Boost headers from its huge code base for memory mapped file &amp;amp; shared memory containers. The first idea came to my mind was a simple grep command for #include statements and then parse the paths. This is simple but not so useful for the cases when headers are conditionally included. For example:
#ifndef NO_STL #include &amp;quot;my_class_no_stl.h&amp;quot; #else #include &amp;quot;my_class_stl.h&amp;quot; #endif  To be honest, grep won’t be able to handle it.</description>
    </item>
    
  </channel>
</rss>